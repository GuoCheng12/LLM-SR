{
    "sample_order": 7,
    "function": "def equation(t: np.ndarray, x: np.ndarray, v: np.ndarray, params: np.ndarray) -> np.ndarray:\n    \"\"\" Mathematical function for acceleration in a damped nonlinear oscillator\n\n    Args:\n        t: A numpy array representing time.\n        x: A numpy array representing observations of current position.\n        v: A numpy array representing observations of velocity.\n        params: Array of numeric constants or parameters to be optimized\n\n    Return:\n        A numpy array representing acceleration as the result of applying the mathematical function to the inputs.\n    \"\"\"\n    \"\"\"Even more improved version of `equation_v1`.\"\"\"\n    \n    dv = params[0] * t + params[1] * x + params[2] * v + params[3] * (t ** 2) + params[4] * (x ** 2) + params[5] * (v ** 2) + params[6] * np.sin(t) + params[7] * np.cos(t) + params[8] * np.sin(x) + params[9] * np.cos(x) + params[10]\n    return dv\n\n",
    "score": null,
    "params": null,
    "top_3_scores": []
}